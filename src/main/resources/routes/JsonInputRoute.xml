<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <routeContext id="jsonInputRouteContext" xmlns="http://camel.apache.org/schema/spring">

        <!-- here is a sample which processes the input files
         (leaving them in place - see the 'noop' flag)
         then performs content based routing on the message using XPath -->

        <route id="logJsonInput">
            <from uri="file:src/data?noop=true&amp;include=.*\.json" />
            <log message="json file received ${body}"/>

            <!-- this header is needed in order for Jackson to know what type to use when deserializing the message -->
            <setHeader headerName="JMSType">
                <constant>com.hoopladigital.bean.ReportRequest</constant>
            </setHeader>

            <choice>
                <when>
                    <jsonpath>$.[?($.reportType=='ORDER_LINE_DOWNLOAD')]</jsonpath>
                    <unmarshal><custom ref="json"/></unmarshal>
                    <to uri="bean:jsonProcessor" />
                </when>
            </choice>
            

        </route>

    </routeContext>

</beans>